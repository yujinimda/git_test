//타입 추론
let message = "Hello, goguma!" // 타입 추론: string
let count = 5; // 타입 추론: number

//예시
const user = {
  name: "goguma",
  age: 4
} // 자동으로 { name: string, age: number }로 추론됨

function add(x: number, y:number) {
  return x + y ; // return 값도 number로 추론됨
}

// 굳이 모든 곳에 타입을 선언하지 않아도 되는 이유가 타입 추론덕이다.
// 그럼 ts 왜씀?
// string이나 number같은건 걍 안써도 된다는거야? 아니면 추론할만큼 가벼운건 안써도 된다는거야? 추후에 안가벼워질수도 있는거잖아
// 타입스크립트의 타입 추론이 강력한데 왜 굳이 타입을 써야하는거임? 이건 포스팅 하나 따로 하자
//
// (생략 가능) 타입스크립트가 충분히 추론할 수 있는 경우 → 변수 선언, 간단한 함수 반환값
// (명시 필수) 함수 매개변수, 복잡한 객체, 함수 반환 타입(특히 복잡한 로직일 때)
// (명시 권장) 확장 가능성이 있는 경우 → 타입을 미리 지정해서 유지보수를 쉽게 만들기
// 너무 많은 타입 선언은 오히려 가독성을 해칠 수 있고, 너무 적으면 유지보수가 어려워질 수 있으니까, "적절한 밸런스"를 찾는 게 중요해! 🚀

